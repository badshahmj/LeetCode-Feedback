class Solution {
    public int maxValue(int n, int index, int maxSum) {
    long low=1;
    long high=maxSum;
     
    long l=index;
    long r=(n-1)-index;
    long res=0;  

    while(low<=high)
    {
        long mid=(low+high)>>1;
        
        long ls=0;
        long rs=0;
        long sum=mid;
        long m=mid-1;
        if(l<=m)
        {
            ls=m*(m+1)/2 -(m-l)*(m-l+1)/2;
        }
        else{
            ls=m*(m+1)/2+ 1*(l-m);
        }
         if(r<=m)
        {
            rs=((m)*(m+1)/2) - ((m-r)*(m-r+1)/2);
        }
        else{
            rs=((m)*(m+1)/2)+ 1*(r-m);
        }
        sum+=rs+ls;
        if(sum>maxSum)
        {
            high=mid-1;
        }
        else{
            res=mid;
            low=mid+1;
        }
    }
        return (int)res;
    }
}
